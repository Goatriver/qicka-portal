"""
Django settings for vuohiportal project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from configparser import RawConfigParser


def keys_to_upper(conf_section):
    d = {}
    for key, value in conf_section.items():
        d[key.upper()] = value
    return d


config = RawConfigParser()
config.read("/CloudFS/vuohiportal/configs/settings.ini")

try:
    # SSL
    header = (config.get('SSL', 'SECURE_PROXY_SSL_HEADER_PROTOCOL'), config.get('SSL', 'SECURE_PROXY_SSL_HEADER_VALUE'))
    SECURE_PROXY_SSL_HEADER = header
    SECURE_SSL_REDIRECT = config.getboolean('SSL', 'SECURE_SSL_REDIRECT')
    SESSION_COOKIE_SECURE = config.getboolean('SSL', 'SESSION_COOKIE_SECURE')
    CSRF_COOKIE_SECURE = config.getboolean('SSL', 'CSRF_COOKIE_SECURE')
except ValueError:
    pass

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.get('GENERAL', 'SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config.getboolean('GENERAL', 'DEBUG')

ALLOWED_HOSTS = config['ALLOWED_HOSTS'].values()


# Application definition

INSTALLED_APPS = [
    'channels',
    # 'vuohisocket',
    'data_logger_api.apps.DataLoggerApiConfig',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_bulk',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap_ui',
    'portfolio',
    'homepage'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vuohiportal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'context_processors.constants'
            ],
        },
    },
]

WSGI_APPLICATION = 'vuohiportal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': keys_to_upper(config['DATABASE'])
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# REST_FRAMEWORK

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissions'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication'
    ]
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = config.get("LOCALIZATION", "LANGUAGE_CODE")

TIME_ZONE = config.get("LOCALIZATION", "TIME_ZONE")

USE_I18N = config.getboolean("LOCALIZATION", "USE_I18N")

USE_L10N = config.getboolean("LOCALIZATION", "USE_L10N")

USE_TZ = config.getboolean("LOCALIZATION", "USE_TZ")


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = config.get("STATIC", "STATIC_URL")
STATIC_ROOT = config.get("STATIC", "STATIC_ROOT")


# Media

MEDIA_URL = config.get("MEDIA", "MEDIA_URL")
MEDIA_ROOT = config.get("MEDIA", "MEDIA_ROOT")

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]


# template constants

TEMPLATE_CONSTANTS = {
    "SOCIALS": [
        {
            "URL": "https://www.facebook.com/pasi.vuohijoki",
            "ICON": "fab fa-facebook"
        },
        {
            "URL": "https://www.instagram.com/goatriver90/",
            "ICON": "fab fa-instagram"
        },
        {
            "URL": "https://www.linkedin.com/in/pasi-vuohijoki-677381144/",
            "ICON": "fab fa-linkedin"
        },
        {
            "URL": "https://github.com/Goatriver",
            "ICON": "fab fa-github"
        }
    ],

    "MENU_LINKS": [
        {
            "URL": "#home",
            "ICON": "fas fa-home",
            "TEXT": "Home",
            "ADMIN": False
        },
        {
            "URL": "#portfolio",
            "ICON": "fa fa-file-picture-o",
            "TEXT": "Portfolio",
            "ADMIN": False
        },
        {
            "URL": "#",
            "ICON": "fas fa-paperclip",
            "TEXT": "CV",
            "ADMIN": False
        },
    ]
}

MAINTENANCE = config.getboolean("MAINTENANCE", "MAINTENANCE", fallback=True)

# channels config
ASGI_APPLICATION = 'vuohiportal.routing.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

